2. Setup: Create React App
--------------------------

* Using create-react-app
------------------------
create-react-app is a progressive web app generator.

$ npx create-react-app my-application

--------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Create an app component
-------------------------

App.js
------
import './App.css';

function App() {
  return (
    <div className='App'>
      <header>
        <h1>Videos</h1>
      </header>
    </div>
  );
}

export default App;


App.css
-------
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

header {
  background-color: #282c34;
  min-height: 20vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

------------------------------------------------------------------------------------------------------------------------------------------------------------------

* Fetch data with React Hooks
-----------------------------
https://orangevalleycaa.org/videos

REMEMBER THAT WE ALWAYS (OR TYPICALLY ALWAYS USE useEffect() FOR DATA FETCHING).

THE FUNCTION THAT IS PASSED INTO useEffect() IS GOING TO RUN AFTER THE RENDER.

REMEMBER THAT IF WE ONLY WANT TO FETCH THE DATA WHEN THE COMPONENT MOUNTS, WE PASS AN EMPTY ARRAY TO useEffect()

App.js
------
import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [data, setData] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const result = await fetch('https://orangevalleycaa.org/api/videos').then(
        response => response.json()
      );
      setData(result);
    };
    fetchData();
  }, []);

  return (
    <div className='App'>
      <header>
        <h1>Videos</h1>
      </header>
      {data.map(video => (
        <div key={video.id}>
          <h2>{video.name}</h2>
          <video height={200} controls src={video.video_url}/>
        </div>
      ))}
    </div>
  );
}

export default App;

------------------------------------------------------------------------------------------------------------------------------------------------------------------




















































